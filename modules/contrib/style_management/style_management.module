<?php

/**
 * @file
 * Contains style_management.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function style_management_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the style_management module.
    case 'help.page.style_management':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Simple description') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_css_alter().
 */
function style_management_css_alter(&$css) {
  $mainController = \Drupal::service('style_management.main_controller');
  $mainController->rebuildTree($css);
  $confi = Drupal::config('style_management.settings');
  if ($confi->get('setting.build_hook_css_alter')) {
    $mainController->build();
  }
  $mainController->alterCss($css);
}

/**
 * Implements hook_cache_flush().
 */
function style_management_cache_flush() {

  $mainController = \Drupal::service('style_management.main_controller');
  $confi = Drupal::config('style_management.settings');
  if ($confi->get('setting.build_hook_cache_flush')) {
    $mainController->build();
  }
}

/**
 * Implements hook_preprocess_page().
 */
function style_management_preprocess_page(&$page) {
  $mainController = \Drupal::service('style_management.main_controller');

  $confi = Drupal::config('style_management.settings');

  if ($confi->get('setting.build_hook_preprocess_page')) {
    $mainController->build();
  }
}

/**
 * Implements hook_theme().
 */
function style_management_theme($existing, $type, $theme, $path) {
  return [
    'edit_variables' => [
      'render element' => 'element',
      'variables' => [
        'items' => [],
      ],
    ],
  ];
}
